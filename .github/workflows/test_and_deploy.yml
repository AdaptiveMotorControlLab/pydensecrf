# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: test and deploy

on:
  push:
    branches:
      - main
    tags:
      - "v*"  # Push events to matching v*, i.e., v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.8', '3.9']  # Issues with monai and 3.10; pausing for now. Users should use Python 3.9.

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # These libraries enable testing on Qt on Linux
      - uses: tlambert03/setup-qt-libs@v1

      # Strategy borrowed from vispy for installing OpenGL libs on Windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      # If you need dependencies from Conda, consider using:
      # setup-miniconda: https://github.com/conda-incubator/setup-miniconda
      # and tox-conda: https://github.com/tox-dev/tox-conda
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools tox tox-gh-actions
          python -m pip install napari_cellseg3d

      # This runs the platform-specific tests declared in tox.ini
      - name: Test with tox
        uses: GabrielBB/xvfb-action@v1  # aganders3/headless-gui@v1
        with:
          run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Coverage
        uses: codecov/codecov-action@v2

  deploy:
    needs: [test]
    runs-on: macos-latest
    if: contains(github.ref, 'tags')

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"  # Specify Python 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel twine build

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          # Build the wheel for macOS and Python 3.9
          python -m build --wheel --sdist .

          # Upload to PyPI using Twine
          twine upload dist/*
